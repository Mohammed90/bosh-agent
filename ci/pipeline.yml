---
groups:
- name: bosh-agent
  jobs:
  - test-unit
  - test-integration
  - promote

jobs:
- name: test-unit
  public: true
  plan:
    - get: bosh-agent
      trigger: true
    - task: test-unit
      file: bosh-agent/ci/tasks/test-unit.yml

- name: test-integration
  public: false
  plan:
    - get: bosh-agent
      trigger: true
    - task: test-integration
      privileged: true
      file: bosh-agent/ci/tasks/test-integration.yml
      params:
        BOSH_AWS_ACCESS_KEY_ID: {{BOSH_AWS_ACCESS_KEY_ID}}
        BOSH_AWS_SECRET_ACCESS_KEY: {{BOSH_AWS_SECRET_ACCESS_KEY}}
        BOSH_LITE_KEYPAIR: {{BOSH_LITE_KEYPAIR}}
        BOSH_LITE_SUBNET_ID: {{BOSH_LITE_SUBNET_ID}}
        BOSH_LITE_NAME: {{BOSH_LITE_NAME}}
        BOSH_LITE_SECURITY_GROUP: {{BOSH_LITE_SECURITY_GROUP}}
        BOSH_LITE_PRIVATE_KEY: {{BOSH_LITE_PRIVATE_KEY}}

- name: promote
  public: true
  serial: true
  plan:
    - aggregate:
      - trigger: true
        passed: [test-unit, test-integration]
        get: bosh-agent
      - get: version-semver
        params: {bump: {{version_bump}}}
    - task: assert-version-aligns
      file: bosh-agent/ci/tasks/assert-version-aligns.yml
    - put: version-semver
      params:
        file: version-semver/number
    - put: bosh-agent
      params:
        only_tag: true
        repository: bosh-agent
        tag: version-semver/number
        tag_prefix: v
    - aggregate:
      - task: build-linux
        file: bosh-agent/ci/tasks/build-linux.yml
      - task: build-linux-ppc64le
        file: bosh-agent/ci/tasks/build-linux-ppc64le.yml
    - put: bosh-agent-index
      params:
        files:
        - compiled-linux-*/*
        version: version-semver/number

resources:
- name: bosh-agent
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-agent.git
    branch: {{agent_branch}}
    private_key: {{BOSH_GITHUB_DEPLOYMENT_KEY}}

- name: bosh-agent-index
  type: metalink-resource
  source:
    uri: git+ssh://git@github.com:cloudfoundry/bosh-agent-index.git//
    mirror_files:
      - destination: s3://s3-external-1.amazonaws.com/((RELEASE_BUCKET_AGENT))/{{.Name}}
    options:
      private_key: ((BOSH_AGENT_INDEX_DEPLOYMENT_PRIVATE_KEY))
    url_handlers:
    - type: s3
      options:
        access_key: ((AWS_S3_BUCKET_ACCESS_KEY))
        secret_key: ((AWS_S3_BUCKET_SECRET_KEY))

- name: version-semver
  type: semver
  source:
    initial_version: {{agent_initial_version}}
    key: {{agent_version_key}}
    bucket: {{SEMVER_BUCKET}}
    region_name: {{AWS_S3_BUCKET_REGION}}
    access_key_id: {{AWS_S3_BUCKET_ACCESS_KEY}}
    secret_access_key: {{AWS_S3_BUCKET_SECRET_KEY}}

resource_types:
- name: metalink-resource
  type: docker-image
  source:
    repository: dpb587/metalink-repository-resource
